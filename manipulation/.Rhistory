demo()
demo()
demo(lm.glm, package = "stats", ask = TRUE)
1
demo(graphics, ask = TRUE)
help(sd)
pounds <- c(45000, 50000, 35000, 40000, 35000, 45000, 10000, 15000)
sd(pounds)
help(cor)
help(lmn)
help(lm)
dpois(3, 1)
(1^3 * exp(-1)) / (factorial(3))
pnorm(0)
qnorm(0.5)
mean(1:5)
var(1:5)
sum(1:5-mean(1:5))^2)/(5-1)
mean(1:5)
var(1:5)
sum(1:5-mean(1:5))^2)/(5-1)
sum((1:5-mean(1:5))^2)/(5-1)
mean(1:5)
var(1:5)
sum((1:5-mean(1:5))^2)/(5-1)
sd(1:5)
fivenum(1:4)
summary(1:4)
install.packages("sampling")
strata(c("Species"), size=c(3, 1, 1), method="srswr", data=iris)
library(sampling)
strata(c("Species"), size=c(3, 1, 1), method="srswr", data=iris)
d <- data.frame(x=c("1", "2", "2", "1"),
y=c("A", "B", "A", "B"),
num=c(3, 5, 8, 7))
(xtabs(num ~ x + y, data=d))
xt
margin.table(d, 1)
xt <- (xtabs(num ~ x + y, data=d))
str(xt)
class(xt)
as.array(xt)
xt <- as.array(xt)
str(xt)
class(xt)
xt
xt <- as.array(xt)
str(xt)
margin.table(xt, 1)
xt <- (xtabs(num ~ x + y, data=d))
margin.table(xt, 1)
margin.table(d, 1)
str(xt)
class(xt)
xt <- (xtabs(num ~ x + y, data=d))
margin.table(d, 1)
xt <- (xtabs(num ~ x + y, data=d))
margin.table(xt, 1)
margin.table(xt, 2)
margin.table(xt)
prop.table(xt, 1)
prop.table(xt, 2)
prop.table(xt)
library(MASS)
data(survey)
head(survey[c("Sex", "Exer")])
xtabs(~ Sex + Exer, data=survey)
chisq.test(xtabs(~ Sex + Exer, data=survey))
chisq.test(xtabs(~W.Hnd + Clap, data=survey))
xtabs(~W.Hnd + Clap, data=survey)
chisq.test(xtabs(~W.Hnd + Clap, data=survey))
fisher.test(x)
x <- xtabs(~W.Hnd + Clap, data=survey)
chisq.test(x)
fisher.test(x)
help(menemar.test)
?menemar.test
Performance <- matrix(c(794, 86, 150, 570,
nrow = 2,
dimnames = list(
"1st Survey" = c("Approve", "Disapprove"),
"2nd Survey" = c("Approve", "Disapprove")))
Performance <- matrix(c(794, 86, 150, 570,
Performance <- matrix(c(794, 86, 150, 570,
Performance <- matrix(c(794, 86, 150, 570,
nrow = 2,
dimnames = list(
"1st Survey" = c("Approve", "Disapprove"),
"2nd Survey" = c("Approve", "Disapprove"))))
Performance <- matrix(c(794, 86, 150, 570,
nrow = 2,
dimnames = list(
"1st Survey" = c("Approve", "Disapprove"),
"2nd Survey" = c("Approve", "Disapprove"))))
Performance <- matrix(c(794, 86, 150, 570),
nrow = 2,
dimnames = list(
"1st Survey" = c("Approve", "Disapprove"),
"2nd Survey" = c("Approve", "Disapprove")))
Performance
mcnemar.test(Performance)
library(RJDBC)
install.packages("rjdbc")
install.packages("RJDBC")
library(RJDBC)
library(RJDBC)
options(java.home="C:\\Program Files\\Java\\jre7\\")
library(RJDBC)
options(java.home="C:\Program Files\Java\jre7\")
options(java.home="C:\\Program Files\\Java\\jre7\\")
library(RJDBC)
driver <- JDBC("org.postgresql.Driver",
"C:\\Users\User\\.IntelliJIdea14\\config\\jdbc-drivers",
identifier.quote="'")
options(java.home="C:\\Program Files\\Java\\jre7\\")
library(RJDBC)
driver <- JDBC("org.postgresql.Driver",
"C:\\Users\User\\.IntelliJIdea14\\config\\jdbc-drivers",
identifier.quote="'")
driver <- JDBC("org.postgresql.Driver",
"C:/Users/User/.IntelliJIdea14/config/jdbc-drivers",
identifier.quote="'")
driver <- JDBC("org.postgresql.Driver",
"C:/Users/User/.IntelliJIdea14/config/jdbc-drivers/postgresql-9.3-1100.jdbc4",
identifier.quote="'")
driver <- JDBC("org.postgresql.Driver",
"C:/Users/User/.IntelliJIdea14/config/jdbc-drivers/postgresql-9.3-1100.jdbc4.jar",
identifier.quote="'")
conn <- dbConnect(driver, "jdbc:postgresql://stg-game-bi-redshift-db.cjuwpzj5dj0w.eu-west-1.redshift.amazonaws.com:5439/game",
"game", "X(25aJ)Ub4}n")
d <- dbGetQuery(conn, "select * from gbidw.ft_game_itm_ord_ymd limit 100")
View(d)
View(d)
dbDisconnect(conn)
View(d)
View(d)
View(d)
View(d)
summary(custdata)
custdata <- read.table('custdata.tsv', header=T, sep='\t')
custdata <- read.table('custdata.tsv', header=T, sep='\t')
custdata <- read.table('./custdata.tsv', header=T, sep='\t')
curdir <- getwd()
setwd("D:/dev/workspace/learn_analysis/manipulation")
setwd("D:/dev/workspace/learn_analysis/manipulation")
custdata <- read.table('custdata.tsv', header=T, sep='\t')
View(custdata)
View(custdata)
str(custdata)
summary(custdata)
View(custdata)
View(custdata)
ind <- which(is.na(custdata$is.employed))
custdata[ind,]
sd(custdata$income)
var(custdata$income)
