demo()
demo()
demo(lm.glm, package = "stats", ask = TRUE)
1
demo(graphics, ask = TRUE)
help(sd)
pounds <- c(45000, 50000, 35000, 40000, 35000, 45000, 10000, 15000)
sd(pounds)
help(cor)
help(lmn)
help(lm)
dpois(3, 1)
(1^3 * exp(-1)) / (factorial(3))
pnorm(0)
qnorm(0.5)
mean(1:5)
var(1:5)
sum(1:5-mean(1:5))^2)/(5-1)
mean(1:5)
var(1:5)
sum(1:5-mean(1:5))^2)/(5-1)
sum((1:5-mean(1:5))^2)/(5-1)
mean(1:5)
var(1:5)
sum((1:5-mean(1:5))^2)/(5-1)
sd(1:5)
fivenum(1:4)
summary(1:4)
install.packages("sampling")
strata(c("Species"), size=c(3, 1, 1), method="srswr", data=iris)
library(sampling)
strata(c("Species"), size=c(3, 1, 1), method="srswr", data=iris)
d <- data.frame(x=c("1", "2", "2", "1"),
y=c("A", "B", "A", "B"),
num=c(3, 5, 8, 7))
(xtabs(num ~ x + y, data=d))
xt
margin.table(d, 1)
xt <- (xtabs(num ~ x + y, data=d))
str(xt)
class(xt)
as.array(xt)
xt <- as.array(xt)
str(xt)
class(xt)
xt
xt <- as.array(xt)
str(xt)
margin.table(xt, 1)
xt <- (xtabs(num ~ x + y, data=d))
margin.table(xt, 1)
margin.table(d, 1)
str(xt)
class(xt)
xt <- (xtabs(num ~ x + y, data=d))
margin.table(d, 1)
xt <- (xtabs(num ~ x + y, data=d))
margin.table(xt, 1)
margin.table(xt, 2)
margin.table(xt)
prop.table(xt, 1)
prop.table(xt, 2)
prop.table(xt)
library(MASS)
data(survey)
head(survey[c("Sex", "Exer")])
xtabs(~ Sex + Exer, data=survey)
chisq.test(xtabs(~ Sex + Exer, data=survey))
chisq.test(xtabs(~W.Hnd + Clap, data=survey))
xtabs(~W.Hnd + Clap, data=survey)
chisq.test(xtabs(~W.Hnd + Clap, data=survey))
fisher.test(x)
x <- xtabs(~W.Hnd + Clap, data=survey)
chisq.test(x)
fisher.test(x)
help(menemar.test)
?menemar.test
Performance <- matrix(c(794, 86, 150, 570,
nrow = 2,
dimnames = list(
"1st Survey" = c("Approve", "Disapprove"),
"2nd Survey" = c("Approve", "Disapprove")))
Performance <- matrix(c(794, 86, 150, 570,
Performance <- matrix(c(794, 86, 150, 570,
Performance <- matrix(c(794, 86, 150, 570,
nrow = 2,
dimnames = list(
"1st Survey" = c("Approve", "Disapprove"),
"2nd Survey" = c("Approve", "Disapprove"))))
Performance <- matrix(c(794, 86, 150, 570,
nrow = 2,
dimnames = list(
"1st Survey" = c("Approve", "Disapprove"),
"2nd Survey" = c("Approve", "Disapprove"))))
Performance <- matrix(c(794, 86, 150, 570),
nrow = 2,
dimnames = list(
"1st Survey" = c("Approve", "Disapprove"),
"2nd Survey" = c("Approve", "Disapprove")))
Performance
mcnemar.test(Performance)
breaks <- c(0, 10000, 50000, 100000, 250000, 1000000)
setwd("D:/dev/workspace/learn_analysis/manipulation")
custdata <- read.table('custdata.tsv', header=T, sep='\t')
# checking locations of missing data
summary(custdata[is.na(custdata$housing.type), c("recent.move", "num.vehicles", "is.employed")])
summary(custdata)
# remapping NA to a level
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed), "missing",
ifelse(custdata$is.employed == T, "employed", "not employed"))
summary(as.factor(custdata$is.employed.fix))
Income.groups <- cut(custdata$Income, breaks=breaks, include.lowest=T)
Income.groups <- cut(custdata$income, breaks=breaks, include.lowest=T)
summary(Income.groups)
View(custdata)
summary(medianincome)
summary(Income.groups)
Income.groups <- as.character(Income.groups)
Income.groups <- ifelse(is.na(Income.groups), "no income", Income.groups)
summary(as.factor(Income.groups))
missingIncome <- is.na(custdata$income)
Income.fix <- ifelse(is.na(custdata$income), 0, custdata$income)
summary(medianincome)
cor(custdata2$age, custdata2$income)
custdata2 <- subset(custdata, (custdata$age > 0 & custdata$age < 100 & custdata$income > 0))
cor(custdata2$age, custdata2$income)
custdata$income.lt.20K <- with(custdata, income < 20000)
View(custdata)
summcary(custdata$income.lt.20K)
summary(custdata$income.lt.20K)
brks <- c(0, 25, 65, Inf)
custdata$age.range <- cut(custdata$age, breaks=brks, include.lowest=T)
summary(custdata$age.range)
str(custdata)
summary(custdata$age)
meanage <- mean(custdata$age)
custdata$age.normalized <- custdata$age/meanage
summary(custdata$age.normalized)
ggplot(data.frame(x=x, y=y), aes(x=x, y=y)) + geom_line()
library(ggplot2)
library(scales)
x <- runif(100)
y <- x^2 + 0.2*x
ggplot(data.frame(x=x, y=y), aes(x=x, y=y)) + geom_line()
ggplot(custdata$age.normalized) + geom_line()
ggplot(custdata, aes(x=custdata$age.normalized)) + geom_line()
ggplot(custdata) + geom_density(aes(x=custdata$age.normalized))
stdage <- sd(custdata$age)
stdage
custdata$age.normalized <- (custdata$age - meanage)/stdage
summary(custdata$age.normalized)
